; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define RegKey "SOFTWARE\saxsys\eteofullinstaller\CurrentVersion\Uninstall\1C236595-1B9B-49DE-B269-6EF7C415BA78"

#define AppName "Timer"
#define AppVersion "@version@"
#define AppPublisher "Saxonia Systems AG"
#define AppURL "http://saxsys.de"

#define SrcDir "@SrcDir@"
#define BuildDir "@BuildDir@"
#define NativeBuildDir "@NativeBuildDir@"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AD5F29C0-189D-4E6E-AA12-C2017614CD27}
AppName={#AppName}
AppVerName={#AppName}-{#AppVersion}
AppPublisher={#AppPublisher}
AppPublisherURL={#AppURL}
AppSupportURL={#AppURL}
AppUpdatesURL={#AppURL}
CreateAppDir=no
OutputDir={#BuildDir}
OutputBaseFilename={#AppName}Installer
Compression=lzma
SolidCompression=yes
UninstallFilesDir={code:GetInstallDir}\uninst

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"; LicenseFile: "{#SrcDir}\Timer_EULA_en.rtf"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"; LicenseFile: "{#SrcDir}\Timer_EULA_de.rtf"

[CustomMessages]
english.AlreadyInstalled=Timer is already installed.
german.AlreadyInstalled=Timer ist bereits installiert.

english.ChooseDestinationDirectory=Choose a destination directory.
german.ChooseDestinationDirectory=Wählen Sie ein Installationsverzeichnis.

english.PleaseChooseDestinationDirectory=Please choose a destination directory.
german.PleaseChooseDestinationDirectory=Bitte wählen Sie ein Installationsverzeichnis.

english.TimerPath=Timer Path
german.TimerPath=Timer Pfad

[Code]
var
  Page: TInputDirWizardPage;
  DataDir: String; 
  ResultCode: Integer;

procedure ExitProcess(exitCode:integer);
  external 'ExitProcess@kernel32.dll stdcall';

procedure InitializeWizard; 
begin
if RegKeyExists(HKEY_LOCAL_MACHINE,'{#RegKey}') then
  begin
    MsgBox(CustomMessage('AlreadyInstalled'), mbConfirmation, MB_OK); 
    ExitProcess(0);
  end

else
  begin
  
    Page := CreateInputDirPage(wpWelcome, 
    CustomMessage('ChooseDestinationDirectory'), '', 
    CustomMessage('PleaseChooseDestinationDirectory'), 
    True, 'timer'); 

    // Add item (with an empty caption) 
    Page.Add(CustomMessage('TimerPath')); 
    Page.Values[0] := 'C:\timer';

    // Read value into variable 
    DataDir := Page.Values[0];

  end

end; 

function NextButtonClick(CurPageID: Integer): Boolean; 
begin 

  if Page <> nil then
  begin
   if CurPageID = Page.ID 
    then 
      begin 
              if (Page.Values[0] = '') 
              then 
                begin 
                  MsgBox(CustomMessage('PleaseChooseDestinationDirectory'), mbInformation, MB_OKCANCEL) 
                end;
              Result := True; 

    end; 
    Result := True; 
  end;

  Result := True;
end;

function GetInstallDir(Path: string): string;
begin
  Result := Page.Values[0];
end;

[Registry]
Root: HKLM; Subkey: "{#RegKey}"; Flags: uninsdeletekeyifempty

[Files]
Source: "{#NativeBuildDir}\*"; DestDir: "{code:GetInstallDir}"; Flags: ignoreversion recursesubdirs createallsubdirs; 
